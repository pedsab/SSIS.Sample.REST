<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/2/2018 2:53:51 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NOTPRDSPO0002"
  DTS:CreatorName="L3\PedroS"
  DTS:DTSID="{2E239E63-4F8C-4094-8B62-6E4BAF5B0CB7}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.92"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="6"
  DTS:VersionGUID="{00999BA8-2928-4388-9FBE-7D88B23E1F0C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV Posts]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2F60FE52-7CBF-4A80-8E8D-6C9EAD1E3CA1}"
      DTS:ObjectName="CSV Posts">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:Unicode="True"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\pedros\Desktop\csv_posts.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="UserId"
              DTS:DTSID="{5980B798-8061-4F00-9EB4-154EA4D25F08}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Id"
              DTS:DTSID="{39D626C0-603F-4D70-9E2D-D7584458B823}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x003B_"
              DTS:MaximumWidth="300"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Titte"
              DTS:DTSID="{50A4E785-137F-4021-9E5A-2128F353067C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Body"
              DTS:DTSID="{66093524-83CC-472D-8628-B04682DB0D59}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\REST Sample - API REST as source"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F97E6ADA-62A2-4EF0-ABBC-5828A3EAA29F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="REST Sample - API REST as source"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\REST Sample - API REST as source\CSV - Destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="CSV - Destination">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\REST Sample - API REST as source\CSV - Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV Posts]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV Posts]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].Columns[UserId]"
                      cachedDataType="i4"
                      cachedName="UserId"
                      externalMetadataColumnId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[UserId]"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[UserId]" />
                    <inputColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].Columns[Id]"
                      cachedDataType="i4"
                      cachedName="Id"
                      externalMetadataColumnId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[Id]"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Id]" />
                    <inputColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].Columns[Titte]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="Titte"
                      externalMetadataColumnId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[Titte]"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Titte]" />
                    <inputColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].Columns[Body]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="Body"
                      externalMetadataColumnId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[Body]"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Body]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[UserId]"
                      dataType="i4"
                      name="UserId" />
                    <externalMetadataColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[Titte]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      name="Titte" />
                    <externalMetadataColumn
                      refId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input].ExternalColumns[Body]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      name="Body" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\REST Sample - API REST as source\REST API - Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="REST API - Source"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4fb5d9c5c8624cf08183444455bf1505.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FD559D6A-07BF-47B4-883B-552EBDC71A5F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4fb5d9c5c8624cf08183444455bf1505</RootNamespace>
    <AssemblyName>SC_4fb5d9c5c8624cf08183444455bf1505</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Net;
using System.Net.Http;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Web.Script.Serialization;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        GetAllAsync().GetAwaiter().GetResult();
    }

    private async Task GetAllAsync()
    {
        var client = new HttpClient();
        client.BaseAddress = new Uri("https://jsonplaceholder.typicode.com");
        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

        var response = await client.GetAsync("/posts");

        if (response.IsSuccessStatusCode)
        {
            var serializer = new JavaScriptSerializer();
            var result = await response.Content.ReadAsStringAsync();

            var posts = serializer.Deserialize<List<Post>>(result);

            foreach (var post in posts)
            {
                PostsBuffer.AddRow();
                PostsBuffer.UserId = post.userId;
                PostsBuffer.Id = post.id;
                PostsBuffer.Titte = post.title;
                PostsBuffer.Body = post.body;
            }
        }
    }
}

public class Post
{
    public int userId { get; set; }
    public int id { get; set; }
    public string title { get; set; }
    public string body { get; set; }
}]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class PostsBuffer: ScriptBuffer

{
    public PostsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 UserId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool UserId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Titte
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Titte_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Body
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Body_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fb5d9c5c8624cf08183444455bf1505.Properties.Settings.get_Default():SC_4fb5d9c5c8624cf08183444455bf1505.Properties.Sett" +
    "ings")]

namespace SC_4fb5d9c5c8624cf08183444455bf1505.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public PostsBuffer PostsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != PostsBuffer)
        {
            PostsBuffer.SetEndOfRowset();
            PostsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Posts"))
            {
                PostsBuffer = new PostsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4fb5d9c5c8624cf08183444455bf1505</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4fb5d9c5c8624cf08183444455bf1505</msb:DisplayName>
    <msb:ProjectId>{4D7ABCC8-9384-4B82-91A6-85C16881B642}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4fb5d9c5c8624cf08183444455bf1505.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4fb5d9c5c8624cf08183444455bf1505")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4fb5d9c5c8624cf08183444455bf1505")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fb5d9c5c8624cf08183444455bf1505.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fb5d9c5c8624cf08183444455bf1505.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fb5d9c5c8624cf08183444455bf1505.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4fb5d9c5c8624cf08183444455bf1505.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4fb5d9c5c8624cf08183444455bf1505.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4fb5d9c5c8624cf08183444455bf1505.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI3jElsAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAALj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANw+AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
PwAAAAAAAEgAAAACAAUAICUAAAQZAAABAAAAAAAAACQ+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBQAAAoqHgIoFQAACioTMAEAFAAAAAEAABECKAQAAAZv
FgAACgoSACgXAAAKKhMwAgA5AAAAAgAAERIAAn0QAAAEEgAoGAAACn0OAAAEEgAVfQ0AAAQGew4A
AAQLEgESACgBAAArEgB8DgAABCgaAAAKKh4CKBsAAAYqHgJ7AQAABCoiAgN9AQAABCoeAnsCAAAE
KiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgJ7BAAABCoiAgN9BAAABCoeAigbAAAKKioCAwQF
KBwAAAoqOgIWA4woAAABKB0AAAoqWgMsCAIWKB4AAAoqcgEAAHBzHwAACno6AhcDjCgAAAEoHQAA
CipaAywIAhcoHgAACipyAQAAcHMfAAAKeiYCGAMoHQAACipaAywIAhgoHgAACipyAQAAcHMfAAAK
eiYCGQMoHQAACipaAywIAhkoHgAACipyAQAAcHMfAAAKeh4CKCAAAAoqHgIoIQAACioeAigiAAAK
Kn4CKCMAAAoCAnMgAAAGfQUAAAQCAnMhAAAGfQYAAAQqBipuAnsHAAAELBICewcAAARvGQAABgIU
fQcAAAQqEzAFAEkAAAADAAARFgorLgQGlA4Ecp4AAHAoJAAACjMZAgUGmgIEBpQoJQAACg4Ecw8A
AAZ9BwAABAYXWAoGAzLOAm8fAAAGAm8cAAAGAigdAAAGKjoCKBsAAAoCA30IAAAEKjoCKBsAAAoC
A30JAAAEKq5+CgAABC0ecqoAAHDQCAAAAigmAAAKbycAAApzKAAACoAKAAAEfgoAAAQqGn4LAAAE
Kh4CgAsAAAQqGn4MAAAEKh4CKCkAAAoqLnMnAAAGgAwAAAQqAAAAGzADAPoBAAAEAAARAnsNAAAE
CgJ7EAAABAsGOYIAAAAGFzv0AAAAcyoAAAolchwBAHBzKwAACm8sAAAKJW8tAAAKby4AAApvLwAA
CiVvLQAACm8uAAAKcmYBAHBzMAAACm8xAAAKcogBAHBvMgAACm8zAAAKDRIDKDQAAAotPwIWJQp9
DQAABAIJfREAAAQCfA4AAAQSAwIoAgAAK91jAQAAAnsRAAAEDQJ8EQAABP4VAwAAGwIVJQp9DQAA
BBIDKDYAAAoMCG83AAAKOQYBAAACczgAAAp9DwAABAhvOQAACm86AAAKbzsAAAoTBRIFKDwAAAot
QQIXJQp9DQAABAIRBX0SAAAEAnwOAAAEEgUCKAMAACvd6gAAAAJ7EgAABBMFAnwSAAAE/hUFAAAb
AhUlCn0NAAAEEgUoPQAAChMEAnsPAAAEEQRvBAAAK28/AAAKEwYrXBIGKEAAAAoTBwd7BwAABG8Y
AAAGB3sHAAAEEQdvBgAABm8QAAAGB3sHAAAEEQdvCAAABm8SAAAGB3sHAAAEEQdvCgAABm8UAAAG
B3sHAAAEEQdvDAAABm8WAAAGEgYoQQAACi2b3hIGFi8NEgb+FgcAABtvQgAACtwCFH0PAAAE3hkT
CAIf/n0NAAAEAnwOAAAEEQgoQwAACt4TAh/+fQ0AAAQCfA4AAAQoRAAACioAAEE0AAACAAAASQEA
AGkAAACyAQAAEgAAAAAAAAAAAAAADgAAAL8BAADNAQAAGQAAABoAAAE2AnwOAAAEAyhFAAAKKgAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAhAkAACN+AADwCQAAYAoAACNTdHJp
bmdzAAAAAFAUAACYAQAAI1VTAOgVAAAQAAAAI0dVSUQAAAD4FQAADAMAACNCbG9iAAAAAAAAAAIA
AAFXF6ILCQsAAAD6ATMAFgAAAQAAADMAAAAKAAAAEgAAACoAAAAXAAAAAQAAAEUAAAAfAAAABAAA
AAQAAAAPAAAAFAAAAAIAAAAHAAAAAQAAAAYAAAABAAAAAQAAAAQAAAAAAG0FAQAAAAAABgA1BIYH
BgDJBIYHBgBOA3MHDwD6BwAABgB7A08GBgAYBE8GBgD5A08GBgCwBE8GBgBVBE8GBgBuBE8GBgCt
A08GBgDIAzAFCgCJBHICBgAiB4YHBgCYAucFBgCSA4YHBgBSBXoIBgDCBoYHBgAWA4YHBgCTAucF
BgBCAoYHDgDqAawGBgA8AIYHBgBKALIAYwBRBwAABgB+BucFEgA5By8GBgDhA3MHBgAyCecFCgAB
B3ICFgDmBnICCgCUBnICCgCRCXICBgAxA3MHBgASB6YHBgCIBhoGGgDsAlcFGgBiA1cFGgDFAgUG
BgBRAOcFBgBhBucFBgAKAucFBgBUCk8GDgBoCawGGgBKBecFDgDLCLMIDgAgALMIDgD+BLMIBgAZ
AHoIDgC5CawGBgD+AecFAAAAAJQAAAAAAAEAAQABABAA+gUAABQAAQABAAEAEAAUCgAAdQABAAYA
AQAQAPUGAAB5AAUADwABABAAcwkAAIUABQAbAAEAEACnCAAAdQAIACAAAQAQADgIAAB1AAkAIQAA
ABAArQcJCHUACgAiAAABEABnCAkInQAMACYAAwEQAF4AAABRAA0AKQABAGkBhwEBAIEBhwEBAJUB
igEBAKwBigEGAKcIjQEGADgIkQEGAPUGlQEBAIEJmQEBAIEJmQERAO4FngERALUCowERAMIBqAEG
AAEDhwEGANkGrAEBAAEAsAEGAHAItAEBABIAuAEBAFcAwAFQIAAAAADGAOcEBgABAFggAAAAAMYA
8gQGAAEAYCAAAAAAxgAeCQYAAQCAIAAAAACBAN8ASwABAMUgAAAAAIYYXAcGAAEAzSAAAAAAhggG
AccBAQDVIAAAAACGCBEBAQABAN4gAAAAAIYIWwHHAQIA5iAAAAAAhghiAQEAAgDvIAAAAACGCC4C
ywEDAPcgAAAAAIYIOAIQAAMAACEAAAAAhgg+CssBBAAIIQAAAACGCEcKEAAEABEhAAAAAIYYXAcG
AAUAGSEAAAAAhhhcB1AABQAkIQAAAACGCPsAAQAIADMhAAAAAIYIowXPAQkASiEAAAAAhgj0AAEA
CgBZIQAAAACGCJUFzwELAHAhAAAAAIYIDAMQAAwAeiEAAAAAhgi1Bc8BDQCRIQAAAACGCDUKEAAO
AJshAAAAAIYIxgXPAQ8AsiEAAAAAhgAuCgYAEAC6IQAAAACGADkJBgAQAMIhAAAAAIYAPAlhABAA
yiEAAAAAhhhcBwYAEADqIQAAAADGARAJBgAQAOwhAAAAAIEAIAEGABAACCIAAAAAxgAZCtQBEADq
IQAAAADGAR4JBgAUAF0iAAAAAIYYXAfhARQAbCIAAAAAhhhcB+EBFQARIQAAAACDGFwHBgAWAHsi
AAAAAJMIDgfoARYApyIAAAAAkwidAu4BFgCuIgAAAACTCKkC9AEWALYiAAAAAJYISAn7ARcAvSIA
AAAAhhhcBwYAFwDFIgAAAACRGGIHAAIXANQiAAAAAOEBJQoGABcAECUAAAAA4QFVAhsAFwAAAAEA
HgUAAAEAHgUAAAEAHgUAAAEAHgUAAAEABwcAAAIAQggAAAMAogYAAAEAHgUAAAEAHgUAAAEAHgUA
AAEAHgUAAAEAHgUAAAEAHgUAAAEAHgUAAAEAHgUAAAEAFgkAAAIAaQcAAAMA+AgAAAQAogYAAAEA
lwkAAAEAlwkAAAEAHgUAAAEAZQIKAFUACQBcBwEAEQBcBwYAGQBcBwoAKQBcBxAAMQBcBxAAOQBc
BxAAQQBcBxAASQBcBxAAUQBcBxAAWQBcBxAAYQBcBxAAaQBcBwYAgQBcBxUAmQBcBwYAqQAlCgYA
qQBVAhsA4QBcBwYAEQFcBwYAMQFcByEACQHnBAYACQHyBAYAiQAuBy0AcQBUCQYAkQDlAjkAkQDt
CT4AkQBOBUsA6QBcBwYA8QBcB1AA8QDeBVsA8QDWBQEASQFcBxAA8QAuCgYA8QA5CQYA8QA8CWEA
CQFcBwYACQGdAGkACQFWCHEAeQAcAncAeQBQCn8AGQFcB4UAOQFcBwYAYQFcBwYAaQFcBxAAYQEA
CasAYQHeCLIAcQHFCbgADAC8BgYAgQFcBxAADAAcAcwAYQHrANIAFAAuB+UAHABLAWEAkQA0AfUA
HABUCQsBsQDSAWEA2QBcBwYAsQCtCRABkQHNABYBJAAuB+UALABLAWEALABUCQsB2QAkBTYBNABO
B00BPAChCQsBPAAlCmEAmQHdAgYAkQB7Bl0BkQBeCQYAkQBVAhsAIQBzAAQDLgALACECLgATACoC
LgAbAEkCLgAjAFICLgArAHsCLgAzAHsCLgA7AHsCLgBDAFICLgBLAIECLgBTAHsCLgBbAJgCQQBz
AAQDQwBjAAQDYQBzAAQDgABrAOICgQBzAAQDwABzAAQD4ABzAAQDAAFzAAQDAwGTAAQDIAFzAAQD
QAFzAAQDQwFzAAQDYAFzAAQDgAFzAAQDgQFzAAQDoAFzAAQDqQGbAEkCyQGbAEkCQAWLAAQDKAAy
AGUAjQADAAEABAAFAAgADQAJAA8AAAAVAQQCAABmAQQCAAA8AggCAABLCggCAAD/AAQCAACnBQwC
AAAZAQQCAACrBQwCAAAQAwgCAAC5BQwCAAA5CggCAADKBQwCAAASBxACAAC9AhYCAABMCRwCAgAG
AAMAAQAHAAMAAgAIAAUAAQAJAAUAAgAKAAcAAQALAAcAAgAMAAkAAQANAAkAAQAQAAsAAQARAA0A
AQASAA8AAQATABEAAQAUABMAAQAVABUAAQAWABcAAQAXABkAAgAjABsAAgAkAB0AAQAlAB0AAgAm
AB8ACgBSAB8ACgBUACEAwwDdAO4AHwEmAUYBVgEEgAAAAQAAAAAAAAAAAAAAAABwAAAABAAAAAAA
AAAAAAAAYwGpAAAAAAAOAAAAAAAAAAAAAABsAdAJAAAAAAQAAAAAAAAAAAAAAHUBrAYAAAAABAAA
AAAAAAAAAAAAfgGRCAAAAAAOAAAAAAAAAAAAAABsAfMJAAAAAAQAAAAAAAAAAAAAAGMB5wUAAAAA
AAAAAAEAAAC3BwAACgACADMARgBrAAABawAsAX0APQEAAAAAADxzZXJpYWxpemVyPjVfXzEAPD51
X18xAFRhc2tgMQBIdHRwSGVhZGVyVmFsdWVDb2xsZWN0aW9uYDEAVGFza0F3YWl0ZXJgMQBMaXN0
YDEASW50MzIAPD51X18yADxHZXRBbGxBc3luYz5kX18zAFNDXzRmYjVkOWM1Yzg2MjRjZjA4MTgz
NDQ0NDU1YmYxNTA1ADxNb2R1bGU+AEdldE91dHB1dElEAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0
aW9ucy5HZW5lcmljAFJlYWRBc1N0cmluZ0FzeW5jAEdldEFsbEFzeW5jAEdldEFzeW5jAHNldF9J
ZABzZXRfVXNlcklkAGdldF91c2VySWQAc2V0X3VzZXJJZABBZGQATWFya091dHB1dHNGaW5pc2hl
ZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBsZXRlZABnZXRfaWQAc2V0X2lkADx1
c2VySWQ+a19fQmFja2luZ0ZpZWxkADxpZD5rX19CYWNraW5nRmllbGQAPHRpdGxlPmtfX0JhY2tp
bmdGaWVsZAA8Ym9keT5rX19CYWNraW5nRmllbGQAZGVmYXVsdEluc3RhbmNlAGdldF9Jc1N1Y2Nl
c3NTdGF0dXNDb2RlAEh0dHBSZXNwb25zZU1lc3NhZ2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3RpdGxlAHNldF90aXRsZQBJQXN5bmNTdGF0ZU1h
Y2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZQBWYWx1ZVR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlADw+MV9fc3RhdGUAc2V0X1RpdHRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUATWVkaWFUeXBlV2l0aFF1YWxpdHlIZWFkZXJWYWx1ZQB2YWx1ZQBEZXNlcmlhbGl6ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFVyaQBnZXRfVGFzawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfNGZiNWQ5YzVjODYyNGNmMDgxODM0NDQ0NTViZjE1MDUuZGxsAHNldF9JZF9Jc051bGwAc2V0
X1VzZXJJZF9Jc051bGwAc2V0X1RpdHRlX0lzTnVsbABzZXRfQm9keV9Jc051bGwAU2V0TnVsbABz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2ViLlNjcmlwdC5TZXJpYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9uAEN1
bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAFN5c3RlbS5OZXQuSHR0cABDbGVhcgBB
c3luY1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBQaXBlbGluZUJ1ZmZlcgBQb3N0c0J1
ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUYXNrQXdhaXRlcgBHZXRBd2Fp
dGVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1
dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDXzRmYjVkOWM1Yzg2MjRjZjA4MTgzNDQ0NDU1YmYxNTA1LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ180ZmI1ZDljNWM4NjI0
Y2YwODE4MzQ0NDQ1NWJmMTUwNS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcu
VGFza3MAU3lzdGVtLldlYi5FeHRlbnNpb25zAENvbm5lY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5I
ZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJzAEJ1ZmZl
cnMAc2V0X0Jhc2VBZGRyZXNzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmpl
Y3QAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAR2V0UmVzdWx0AFNldFJlc3VsdABIdHRwQ2xp
ZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3Vy
cmVudABnZXRfQ29udGVudABIdHRwQ29udGVudABnZXRfQWNjZXB0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuVHhTY3JpcHQAU3RhcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUG9zdABQ
cmltZU91dHB1dABNb3ZlTmV4dABBZGRSb3cAc2V0X0JvZHkAZ2V0X2JvZHkAc2V0X2JvZHkAZ2V0
X0Fzc2VtYmx5AAAAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
C1AAbwBzAHQAcwAAcVMAQwBfADQAZgBiADUAZAA5AGMANQBjADgANgAyADQAYwBmADAAOAAxADgA
MwA0ADQANAA0ADUANQBiAGYAMQA1ADAANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAASWgAdAB0AHAAcwA6AC8ALwBqAHMAbwBuAHAAbABhAGMAZQBoAG8AbABkAGUA
cgAuAHQAeQBwAGkAYwBvAGQAZQAuAGMAbwBtAAAhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AagBz
AG8AbgAADS8AcABvAHMAdABzAAAAAOSbKY709A5PvHcZaa+2uEEABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEj0FIAEBElUGIAEBEYCVBAcBETkEIAAROQYHAhEoEUkEAAARSQcwAQEBEB4ABAoBESgE
IAASRQogAwESfR0IEoCBBSACAQgcAyAAAgMHAQgHAAIIEoCBDgUgAR0ICAcAARI9EYCpBSAAEoCt
ByACAQ4SgK0dBwkIEggSWRURXQESWQ4VEV0BDhURZQESDBIMEmkGIAEBEoC1BSAAEoC5CiAAFRKA
vQESgMEIFRKAvQESgMEFIAEBEwAKIAEVEoDFARJZDgcVEoDFARJZCCAAFRFdARMABhURXQESWQow
AgIBEB4AEB4BCgoCFRFdARJZESgEIAATAAUgABKAyQggABUSgMUBDgYVEoDFAQ4FFRFdAQ4JCgIV
EV0BDhEoBjABAR4ADggKARUSYQESDAYVEmEBEgwIIAAVEWUBEwAGFRFlARIMBSABARJpCLd6XFYZ
NOCJCImEXc2AgMyRCLA/X38R1Qo6CDG/OFatNk41AgYIAgYOAwYSGAMGEhwDBhIQBAYSgIUEBhKA
jQQGEoCRAwYSJAMGEUkDBhJtAwYSCAcGFRFdARJZBgYVEV0BDgMgAAgDIAAOBCABAQIMIAQBCB0I
HRJ9EoCBBiABARKAhQUAABKAjQUAABKAkQYAAQESgJEEAAASJAMAAAEDKAAIAygADgMoAAIFCAAS
gI0FCAASgJEECAASJAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU0NfNGZiNWQ5YzVjODYyNGNmMDgxODM0NDQ0NTViZjE1MDUAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUhAQAcU2NyaXB0TWFpbis8R2V0QWxs
QXN5bmM+ZF9fMwAABAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAABD8AAAAAAAAAAAAAHj8AAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAABA/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA0AGYAYgA1AGQAOQBjADUAYwA4ADYAMgA0AGMAZgAwADgAMQA4ADMANAA0ADQANAA1ADUAYgBm
ADEANQAwADUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQAZgBiADUAZAA5AGMANQBj
ADgANgAyADQAYwBmADAAOAAxADgAMwA0ADQANAA0ADUANQBiAGYAMQA1ADAANQAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANABmAGIANQBk
ADkAYwA1AGMAOAA2ADIANABjAGYAMAA4ADEAOAAzADQANAA0ADQANQA1AGIAZgAxADUAMAA1AC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQAZgBiADUAZAA5
AGMANQBjADgANgAyADQAYwBmADAAOAAxADgAMwA0ADQANAA0ADUANQBiAGYAMQA1ADAANQAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4fb5d9c5c8624cf08183444455bf1505</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">58</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts]"
                  hasSideEffects="true"
                  name="Posts">
                  <outputColumns>
                    <outputColumn
                      refId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[UserId]"
                      dataType="i4"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[UserId]"
                      name="UserId" />
                    <outputColumn
                      refId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Id]"
                      dataType="i4"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Id]"
                      name="Id" />
                    <outputColumn
                      refId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Titte]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Titte]"
                      name="Titte" />
                    <outputColumn
                      refId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Body]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts].Columns[Body]"
                      name="Body" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\REST Sample - API REST as source.Paths[Posts]"
              endId="Package\REST Sample - API REST as source\CSV - Destination.Inputs[Flat File Destination Input]"
              name="Posts"
              startId="Package\REST Sample - API REST as source\REST API - Source.Outputs[Posts]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="244,41.6"
          Id="Package\REST Sample - API REST as source"
          TopLeft="305.714290920569,85.6470600246971" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\REST Sample - API REST as source">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="165.6,41.6"
          Id="Package\REST Sample - API REST as source\REST API - Source"
          TopLeft="302.857148014769,66.0705891619092" />
        <NodeLayout
          Size="160.8,41.6"
          Id="Package\REST Sample - API REST as source\CSV - Destination"
          TopLeft="306.285719501729,194.541179198955" />
        <EdgeLayout
          Id="Package\REST Sample - API REST as source.Paths[Posts]"
          TopLeft="386.171433758249,107.670589161909">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,86.8705900370456"
              Start="0,0"
              End="0,79.3705900370456">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.3705900370456" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>